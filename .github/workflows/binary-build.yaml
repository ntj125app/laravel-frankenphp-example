name: Container Binary Build

on:
  push:
    branches:
      - "main"
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  PACKAGE_NAME: ${{ github.repository_owner }}/${{ vars.IMAGE_NAME }}

jobs:
  build-binary:
    if: ${{ github.event_name != 'pull_request' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get & Set Container Metadata
        id: meta-packages
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,format=sha256,digests,tag=binary

      - name: Build & Push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile-compile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta-packages.outputs.tags }}
          labels: ${{ steps.meta-packages.outputs.labels }}
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache-binary
          cache-to: type=registry,ref=ghcr.io/${{ github.repository }}:buildcache-binary,mode=max
      - name: Fetch Binary from Image
        id: fetch-binary
        run: |
          docker cp $(docker create --name static-app-tmp ${{ steps.meta-packages.outputs.tags }}):/go/src/app/dist/frankenphp-linux-x86_64 my-app ; docker rm static-app-tmp
      - name: Upload Binary
        uses: actions/upload-artifact@v4
        with:
          path: ./my-app
